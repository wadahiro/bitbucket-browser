# This references the default nodejs container from
# the Docker Hub: https://registry.hub.docker.com/_/node/
# If you want Nodesource's container you would reference nodesource/node
# Read more about containers on our dev center
# http://devcenter.wercker.com/docs/containers/index.html
box: node
# This is the build pipeline. Pipelines are the core of wercker
# Read more about pipelines on our dev center
# http://devcenter.wercker.com/docs/pipelines/index.html

# You can also use services such as databases. Read more on our dev center:
# http://devcenter.wercker.com/docs/services/index.html
# services:
    # - postgres
    # http://devcenter.wercker.com/docs/services/postgresql.html

    # - mongo
    # http://devcenter.wercker.com/docs/services/mongodb.html
build:
  # The steps that will be executed on build
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # http://devcenter.wercker.com/docs/steps/index.html
  steps:
    # A step that executes `npm install` command
    - npm-install

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

    - script:
        name: install d.ts
        code: |
          ./node_modules/.bin/typings install

    - script:
        name: release build
        code: |
          npm run dist

    - script:
        name: move to output
        code: |
          export RELEASE_TAG=$(node -pe 'require("./package.json").version')
          echo "${RELEASE_TAG}" > $WERCKER_OUTPUT_DIR/.release_tag
          mv dist/bitbucket-browser.tar.gz $WERCKER_OUTPUT_DIR/bitbucket-browser-${RELEASE_TAG}.tar.gz

deploy:
  steps:
    - script:
        name: restore release tag
        code: |
          export RELEASE_TAG=$(cat .release_tag)
          ls -al .
    - wercker/github-create-release:
        token: $GITHUB_TOKEN
        tag: v${RELEASE_TAG}
    - wercker/github-upload-asset:
        token: $GITHUB_TOKEN
        file: bitbucket-browser-${RELEASE_TAG}.tar.gz